apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch-logging
  namespace: kube-system
  labels:
    k8s-app: elasticsearch-logging
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  serviceName: elasticsearch-logging
  replicas: 1
  selector:
    matchLabels:
      k8s-app: elasticsearch-logging
  template:
    metadata:
      labels:
        k8s-app: elasticsearch-logging
    spec:
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      serviceAccountName: elasticsearch-logging
      priorityClassName: system-cluster-critical
      initContainers:
      - name: elasticsearch-logging-init
        image: alpine:3.6
        command: ["/sbin/sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      containers:
      - name: elasticsearch-logging
        image: k8s.gcr.io/elasticsearch:v6.2.5
        resources:
          limits:
            cpu: 1000m
          requests:
            cpu: 100m
        ports:
        - containerPort: 9200
          name: db
          protocol: TCP
        - containerPort: 9300
          name: transport
          protocol: TCP
        volumeMounts:
        - name: elasticsearch-logging
          mountPath: /data
        env:
        - name: "NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MINIMUM_MASTER_NODES
          value: "1"
      volumes:
      - name: elasticsearch-logging
        {% if not logging.elasticsearch.storage_class_name -%}
        emptyDir: {}
        {% else -%}
        persistentVolumeClaim:
          claimName: elasticsearch-logging
        {% endif %}

{% if logging.elasticsearch.storage_class_name -%}
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: elasticsearch-logging
  namespace: kube-system
  labels:
    k8s-app: elasticsearch-logging
spec:
  storageClassName: {{ logging.elasticsearch.storage_class_name }}
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ logging.elasticsearch.storage_size }}
{% endif -%}
