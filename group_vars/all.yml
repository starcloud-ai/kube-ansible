---

# Kubenrtes version, only support 1.7.0+.
kube_version: 1.11.1

# CRI plugin,
# Supported: docker, containerd.
cri_plugin: docker

# CNI plugin,
# Supported: calico, flannel, weave, canal or router.
network: calico
pod_network_cidr: 10.244.0.0/16

# CNI opts,
# flannel(--iface=enp0s8), calico(interface=enp0s8), canal(enp0s8).
cni_iface: ""

# Kubernetes cluster network.
cluster_subnet: 10.96.0
kubernetes_service_ip: "{{ cluster_subnet }}.1"
service_ip_range: "{{ cluster_subnet }}.0/12"
service_node_port_range: 30000-32767
api_secure_port: 5443

# Highly Available configuration.
haproxy: true
keepalived: true # set `lb_vip_address` as keepalived vip, if this enable.
keepalived_vip_interface: "{{ ansible_default_ipv4.interface }}"

lb_vip_address: 192.168.21.28
lb_secure_port: 6443
lb_api_url: "https://{{ lb_vip_address }}:{{ lb_secure_port }}"

# Etcd configuration variables.
etcd_initial_token: etcd-k8s-cluster
etcd_domain_name: test.etcd.com
etcd_iface: ""

# A list of insecure registrys you might need to define
add_registry:
# - "gcr.io"

insecure_registrys:
  - "192.168.21.29:5000"

docker_opts:
# - "HTTP_PROXY=http://proxy.example.com:80/"
# - "HTTPS_PROXY=https://proxy.example.com:443/"

# Kubernetes authentication and security
bootstrap_token: b96cee11d16de85256d63efd2e18e7d8
extra_auth:
  basic:
    accounts:
    - 'p@ssw0rd,admin,admin'
  # token:
  #   values:
  #   - "0fdd1a8875ec,admin,admin"

encryption_token: iTNwwjHuxNI9+8niwh8GJKT5NQiHFqcOTrrhzYfhAvk=

# Core addons (Strongly recommend)
kube_dns: true
dns_name: cluster.local # cluster dns name
dns_ip: "{{ cluster_subnet }}.10"

kube_proxy: true
kube_proxy_mode: iptables # support: iptables, userspace or ipvs(alpha).
kube_proxy_ipvs_scheduler: rr # depend on ipvs mode.

# Extra addons
kube_dashboard: true
kube_logging: true
kube_monitoring: true

logging_host: "dev-kibana.local.ai"

ingress: true
ingress_type: nginx # support: nginx or traefik.
auth_user: clustar
auth_secret: Y2x1c3Rhcjp2eE4xdkJWSDBGb2pzCg==  # generated by: echo "clustar:$(openssl passwd -crypt 123456)" | base64

# Enable docker registry
registry: false
registry_ui: false
# registry_url: "172.16.35.9:5000"
registry_url: "192.168.21.29:5000"

# Enable and disable ceph cluster
ceph_cluster: false

# Add http and https proxy
proxy_env:
  http_proxy: "" # http://:<usr>@<passwd>:<ip>:<port>
  https_proxy: "" # https://<usr>:<passwd>@<ip>:<port>

# Offline mode area
repos_offline: false
repos_port: 4040
repos_offline_url: "http://172.16.35.9:{{ repos_port }}"

# Add nfs-client
nfs_client: true
nfs_server: "192.168.21.29"
nfs_path: "/var/nfs/home"
nfs_storage_class: "nfs"

# registry_hosts:
#   docker:          ""
#   gcrio:           "gcr.io/"
#   elastic:         "docker.elastic.co/"
#   quayio:          "quay.io/"

registry_hosts:
  docker:          "{{ registry_url }}/"
  gcrio:           "{{ registry_url }}/"
  elastic:         "{{ registry_url }}/"
  quayio:          "{{ registry_url }}/"

images:
  pod_infra: # registry.access.redhat.com/rhel7/pod-infrastructure
    name: pause
    repos: "{{ registry_hosts.gcrio }}google_containers/"
    tag: "3.0"
  apiserver:
    name: kube-apiserver-amd64
    repos: "{{ registry_hosts.gcrio }}google_containers/"
    tag: "v{{ kube_version }}"
  manager: # 'quay.io/attcomdev/kube-controller-manager:v{{ kube_version }}' for ceph storage class
    name: kube-controller-manager-amd64
    repos: "{{ registry_hosts.gcrio }}google_containers/"
    tag: "v{{ kube_version }}"
  scheduler:
    name: kube-scheduler-amd64
    repos: "{{ registry_hosts.gcrio }}google_containers/"
    tag: "v{{ kube_version }}"
  haproxy:
    name: haproxy
    repos: "{{ registry_hosts.docker }}kairen/"
    tag: "1.7"
  keepalived:
    name: keepalived
    repos: "{{ registry_hosts.docker }}kairen/"
    tag: "1.2.24"
  registry:
    name: registry
    repos: "{{ registry_hosts.docker }}kairen/"
    tag: "2.6.1"
  registry_ui:
    name: docker-registry-ui
    repos: "{{ registry_hosts.docker }}parabuzzle/"
    tag: "2.1.3"
  repos:
    name: pkg-repos
    repos: "{{ registry_hosts.docker }}kairen/"
    tag: "0.1.0"
  dashboard:
    name: "kubernetes-dashboard-amd64"
    repos: "{{ registry_hosts.gcrio }}google_containers/"
    tag: "v1.8.0"
  kubedns:
    name: "k8s-dns-kube-dns-amd64"
    repos: "{{ registry_hosts.gcrio }}google_containers/"
    tag: "1.14.7"
  dnsmasq:
    name: "k8s-dns-dnsmasq-nanny-amd64"
    repos: "{{ registry_hosts.gcrio }}google_containers/"
    tag: "1.14.7"
  sidecar:
    name: "k8s-dns-sidecar-amd64"
    repos: "{{ registry_hosts.gcrio }}google_containers/"
    tag: "1.14.7"
  heapster:
    name: "heapster-amd64"
    repos: "{{ registry_hosts.gcrio }}google_containers/"
    tag: "v1.5.0-beta.2"
  resizer:
    name: "addon-resizer"
    repos: "{{ registry_hosts.gcrio }}google_containers/"
    tag: "1.7"
  influxdb:
    name: "heapster-influxdb-amd64"
    repos: "{{ registry_hosts.gcrio }}google_containers/"
    tag: "v1.3.3"
  grafana:
    name: "heapster-grafana-amd64"
    repos: "{{ registry_hosts.gcrio }}google_containers/"
    tag: "v4.4.3"
  elasticsearch:
    name: "elasticsearch"
    repos: "{{ registry_hosts.gcrio }}google-containers/"
    tag: "v5.6.2"
  fluentd:
    name: "fluentd-elasticsearch"
    repos: "{{ registry_hosts.gcrio }}google-containers/"
    tag: "v2.0.2"
  kibana:
    name: "kibana"
    repos: "{{ registry_hosts.elastic }}kibana/"
    tag: "5.6.2"
  nginx_ingress:
    name: "nginx-ingress-controller"
    repos: "{{ registry_hosts.quayio }}kubernetes-ingress-controller/"
    tag: "0.9.0"
  default_backend:
    name: defaultbackend
    repos: "{{ registry_hosts.gcrio }}google_containers/"
    tag: "1.4"
  traefik:
    name: traefik
    repos: "{{ registry_hosts.docker }}"
    tag: "v1.5-alpine"
  kube_proxy:
    name: "kube-proxy-amd64"
    repos: "{{ registry_hosts.gcrio }}google_containers/"
    tag: "v{{ kube_version }}"
  nfs_client:
    name: "nfs-client-provisioner"
    repos: "{{ registry_hosts.quayio }}external_storage/"
    tag: "latest"
  calico_cni:
    name: "cni"
    repos: "{{ registry_hosts.quayio }}calico/"
    tag: "v1.11.0"
  calico_node:
    name: "node"
    repos: "{{ registry_hosts.quayio }}calico/"
    tag: "v2.6.2"
  calico_policy_controller:
    name: "kube-controllers"
    repos: "{{ registry_hosts.quayio }}calico/"
    tag: "v1.0.0"
  flannel_090:
    name: "flannel"
    repos: "{{ registry_hosts.quayio }}coreos/"
    tag: "v0.9.0-amd64"
  flannel_091:
    name: "flannel"
    repos: "{{ registry_hosts.quayio }}coreos/"
    tag: "v0.9.1-amd64"
  kube_router:
    name: "kube-router"
    repos: "{{ registry_hosts.docker }}cloudnativelabs/"
    tag: "latest"
  busybox:
    name: "busybox"
    repos: "{{ registry_hosts.docker }}"
    tag: "latest"
  weave_kube:
    name: "weave-kube"
    repos: "{{ registry_hosts.docker }}weaveworks/"
    tag: "2.0.4"
  weave_npc:
    name: "weave-npc"
    repos: "{{ registry_hosts.docker }}weaveworks/"
    tag: "2.0.4"